#  This template allows you to deploy your React Component library to an AWS Codeartifact
#  The workflow allows running tests, code linting and security scans on feature branches (as well as master).
#  The react app will be validated, deployed to S3 and trigger an AWS Cloudfront distribution invalidation to refresh the CDN caches after the code is merged to master.

# Prerequisites: $AWS_ACCESS_KEY_ID, $AWS_SECRET_ACCESS_KEY, $AWS_REGION setup in the Deployment variables.

image: node:16

# Workflow Configuration

pipelines:
  branches:
    master:
      - step:
          name: Install Yarn, AWS and Get AWS CodeArtifact Token
          image: atlassian/default-image:3
          script:
            # Install Yarn
            - echo "Installing Yarn"
            - curl -o- -L https://yarnpkg.com/install.sh | bash
            - export PATH="$HOME/.yarn/bin:$PATH"
            - yarn --version
            
            # Install AWS
            - echo "Installing AWS"
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - ./aws/install
            - aws --version
            - export PATH="$PATH:/usr/local/aws-cli/v2/current/bin"

            # Get AWS CodeArtifact Token
            - echo "Getting AWS CodeArtifact Token"
            - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain $AWS_DOMAIN --domain-owner $AWS_DOMAIN_OWNER --region $AWS_REGION --query authorizationToken --output text`
            - echo $CODEARTIFACT_AUTH_TOKEN

            # Install Dependencies
            - echo "Install dependencies"
            - yarn install

            # Release Package
            - yarn package:release

            - git push origin master

            # Publish Package
            - yarn package:publish
